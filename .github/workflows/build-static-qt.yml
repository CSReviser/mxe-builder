name: Build Static Qt with Dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      STATIC_PREFIX: /opt/static
      PKG_CONFIG_PATH: /opt/static/lib/pkgconfig
      CFLAGS: -I/opt/static/include
      LDFLAGS: -L/opt/static/lib

    steps:
      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            autoconf automake libtool \
            pkg-config cmake \
            git wget unzip \
            libgl1-mesa-dev
            
      - name: Create static install dir
        run: sudo mkdir -p /opt/static && sudo chown $USER:$USER /opt/static

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libtool \
            autoconf \
            automake \
            cmake \
            gettext \
            git \
            wget

      # zlib
      - name: Build zlib (static)
        run: |
          wget https://github.com/madler/zlib/releases/download/v1.3.1/zlib-1.3.1.tar.gz
          tar xf zlib-1.3.1.tar.gz
          cd zlib-1.3.1
          ./configure --static --prefix=/opt/static
          make -j$(nproc)
          make install

      # libpng
      - name: Build libpng (static)
        run: |
          wget https://download.sourceforge.net/libpng/libpng-1.6.43.tar.gz
          tar xf libpng-1.6.43.tar.gz
          cd libpng-1.6.43
          CPPFLAGS="-I/opt/static/include" LDFLAGS="-L/opt/static/lib" \
          ./configure --disable-shared --enable-static --prefix=/opt/static
          make -j$(nproc)
          make install

      # freetype
      - name: Build freetype (static)
        run: |
          wget https://download.savannah.gnu.org/releases/freetype/freetype-2.13.2.tar.gz
          tar xf freetype-2.13.2.tar.gz
          cd freetype-2.13.2
          ./configure --prefix=/opt/static --enable-static --disable-shared \
            --with-png=yes \
            CPPFLAGS="-I/opt/static/include" \
            LDFLAGS="-L/opt/static/lib"
          make -j$(nproc)
          make install

      # harfbuzz
      - name: Build harfbuzz (static)
        run: |
          wget https://github.com/harfbuzz/harfbuzz/releases/download/8.3.0/harfbuzz-8.3.0.tar.xz
          tar xf harfbuzz-8.3.0.tar.xz
          cd harfbuzz-8.3.0
          meson setup build \
            --prefix=/opt/static \
            --default-library=static \
            -Dbuild_shared_libs=false \
            -Dfreetype=enabled \
            -Dglib=disabled \
            -Dicu=disabled \
            -Dgobject=disabled \
            -Dtests=disabled \
            -Dbenchmark=disabled \
            -Ddocs=disabled \
            -Dintrospection=disabled \
            -Dpng=enabled \
            --buildtype=release \
            -Dc_args="-I/opt/static/include" \
            -Dcpp_args="-I/opt/static/include" \
            -Dlink_args="-L/opt/static/lib"
          meson compile -C build
          meson install -C build

      - name: Checkout Qt source
        uses: actions/checkout@v3
        with:
          repository: qt/qt-everywhere-src
          ref: v6.9.0
          path: qt6

      - name: Configure and build Qt static
        run: |
          cd qt6
          ./configure \
            -prefix ${{ github.workspace }}/qt6-static-install \
            -static \
            -release \
            -opensource -confirm-license \
            -nomake examples -nomake tests \
            -skip qt3d -skip qtwebengine -skip qtwebchannel -skip qtwebview \
            -skip qtcharts -skip qtvirtualkeyboard \
            -skip qtlocation -skip qtsensors -skip qtlottie \
            -skip qtconnectivity -skip qtdoc -skip qttranslations \
            -no-pch \
            -system-harfbuzz -system-libpng -system-freetype \
            -platform linux-g++ \
            -c++std c++20 \
            -I${{ env.STATIC_PREFIX }}/include \
            -L${{ env.STATIC_PREFIX }}/lib
          make -j$(nproc)
          make install
