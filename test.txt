ac_config_files="$ac_config_files Makefile aux/Makefile aux/xcb-aux.pc reply/Makefile reply/xcb-reply.pc image/Makefile image/xcb-image.pc atom/Makefile atom/xcb-atom.pc event/Makefile event/xcb-event.pc keysyms/Makefile keysyms/xcb-keysyms.pc property/Makefile property/xcb-property.pc icccm/Makefile icccm/xcb-icccm.pc renderutil/Makefile renderutil/xcb-renderutil.pc xcb_util_intro"

  case $ac_config_target in
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "aux/Makefile") CONFIG_FILES="$CONFIG_FILES aux/Makefile" ;;
    "aux/xcb-aux.pc") CONFIG_FILES="$CONFIG_FILES aux/xcb-aux.pc" ;;
    "reply/Makefile") CONFIG_FILES="$CONFIG_FILES reply/Makefile" ;;
    "reply/xcb-reply.pc") CONFIG_FILES="$CONFIG_FILES reply/xcb-reply.pc" ;;
    "image/Makefile") CONFIG_FILES="$CONFIG_FILES image/Makefile" ;;
    "image/xcb-image.pc") CONFIG_FILES="$CONFIG_FILES image/xcb-image.pc" ;;
    "atom/Makefile") CONFIG_FILES="$CONFIG_FILES atom/Makefile" ;;
    "atom/xcb-atom.pc") CONFIG_FILES="$CONFIG_FILES atom/xcb-atom.pc" ;;
    "event/Makefile") CONFIG_FILES="$CONFIG_FILES event/Makefile" ;;
    "event/xcb-event.pc") CONFIG_FILES="$CONFIG_FILES event/xcb-event.pc" ;;
    "keysyms/Makefile") CONFIG_FILES="$CONFIG_FILES keysyms/Makefile" ;;
    "keysyms/xcb-keysyms.pc") CONFIG_FILES="$CONFIG_FILES keysyms/xcb-keysyms.pc" ;;
    "property/Makefile") CONFIG_FILES="$CONFIG_FILES property/Makefile" ;;
    "property/xcb-property.pc") CONFIG_FILES="$CONFIG_FILES property/xcb-property.pc" ;;
    "icccm/Makefile") CONFIG_FILES="$CONFIG_FILES icccm/Makefile" ;;
    "icccm/xcb-icccm.pc") CONFIG_FILES="$CONFIG_FILES icccm/xcb-icccm.pc" ;;
    "renderutil/Makefile") CONFIG_FILES="$CONFIG_FILES renderutil/Makefile" ;;
    "renderutil/xcb-renderutil.pc") CONFIG_FILES="$CONFIG_FILES renderutil/xcb-renderutil.pc" ;;
    "xcb_util_intro") CONFIG_FILES="$CONFIG_FILES xcb_util_intro" ;;


#19 [15/48] RUN pkg-config --static --libs xcb &&     ldd /usr/local/lib/libxcb.so || true &&     nm -g /usr/local/lib/libxcb.a | grep Xau || true
#19 0.125 -L/usr/local/lib -lxcb -lXau -lXdmcp -lXau -lXdmcp
#19 0.126 ldd: /usr/local/lib/libxcb.so: No such file or directory
#19 0.132                  U XauDisposeAuth
#19 0.132                  U XauGetBestAuthByAddr
#19 DONE 0.1s


#26 0.122 === Check symbols in libfreetype.a ===
#26 0.123 + nm /usr/local/lib/libfreetype.a
#26 0.123 + grep hb_
#26 0.137                  U hb_blob_create
#26 0.137                  U hb_blob_destroy
#26 0.137                  U hb_buffer_add_utf8
#26 0.137                  U hb_buffer_clear_contents
#26 0.137                  U hb_buffer_create
#26 0.137                  U hb_buffer_destroy
#26 0.137                  U hb_buffer_get_glyph_infos
#26 0.137                  U hb_buffer_get_glyph_positions
#26 0.137                  U hb_buffer_get_length
#26 0.137                  U hb_buffer_guess_segment_properties
#26 0.137                  U hb_face_create
#26 0.137                  U hb_face_create_for_tables
#26 0.137                  U hb_face_destroy
#26 0.137                  U hb_face_set_index
#26 0.137                  U hb_face_set_upem
#26 0.137                  U hb_font_create
#26 0.137                  U hb_font_destroy
#26 0.137                  U hb_font_get_face
#26 0.137                  U hb_font_set_scale
#26 0.137 00000000000022e0 t hb_ft_reference_table_
#26 0.137                  U hb_ot_layout_collect_lookups
#26 0.137                  U hb_ot_layout_lookup_collect_glyphs
#26 0.137                  U hb_ot_layout_lookup_would_substitute
#26 0.137                  U hb_ot_tags_from_script_and_language
#26 0.137                  U hb_set_create
#26 0.137                  U hb_set_destroy
#26 0.137                  U hb_set_is_empty
#26 0.137                  U hb_set_next
#26 0.137                  U hb_set_subtract
#26 0.137                  U hb_shape
#26 DONE 0.1s


#25 12.43 + echo ===== Begin make install =====
#25 12.43 + make install
#25 12.46 rm -rf /usr/local/include/freetype2
#25 12.46 rm -f /usr/local/include/ft2build.h
#25 12.46 /usr/bin/mkdir -p /usr/local/lib                               \
#25 12.46                          /usr/local/lib/pkgconfig                     \
#25 12.46                          /usr/local/include/freetype2/freetype/config \
#25 12.46                          /usr/local/share/aclocal
#25 12.47 ./builds/unix/libtool --mode=install /usr/bin/install -c                             \
#25 12.47                                   /freetype-2.13.2/objs/libfreetype.la /usr/local/lib
#25 12.49 libtool: install: /usr/bin/install -c /freetype-2.13.2/objs/.libs/libfreetype.lai /usr/local/lib/libfreetype.la
#25 12.50 libtool: install: /usr/bin/install -c /freetype-2.13.2/objs/.libs/libfreetype.a /usr/local/lib/libfreetype.a
#25 12.50 libtool: install: chmod 644 /usr/local/lib/libfreetype.a
#25 12.51 libtool: install: ranlib /usr/local/lib/libfreetype.a
#25 12.57 libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin" ldconfig -n /usr/local/lib
#25 12.57 ----------------------------------------------------------------------
#25 12.57 Libraries have been installed in:
#25 12.57    /usr/local/lib
#25 12.57 
#25 12.57 If you ever happen to want to link against installed libraries
#25 12.57 in a given directory, LIBDIR, you must either use libtool, and
#25 12.57 specify the full pathname of the library, or use the '-LLIBDIR'
#25 12.57 flag during linking and do at least one of the following:
#25 12.57    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
#25 12.57      during execution
#25 12.57    - add LIBDIR to the 'LD_RUN_PATH' environment variable
#25 12.57      during linking
#25 12.57    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
#25 12.57    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
#25 12.57 
#25 12.57 See any operating system documentation about shared libraries for
#25 12.57 more information, such as the ld(1) and ld.so(8) manual pages.
#25 12.57 ----------------------------------------------------------------------
#25 11.20 ----------------------------------------------------------------------
#25 11.20 for P in /freetype-2.13.2/include/freetype/freetype.h /freetype-2.13.2/include/freetype/ftadvanc.h /freetype-2.13.2/include/freetype/ftbbox.h /freetype-2.13.2/include/freetype/ftbdf.h /freetype-2.13.2/include/freetype/ftbitmap.h /freetype-2.13.2/include/freetype/ftbzip2.h /freetype-2.13.2/include/freetype/ftcache.h /freetype-2.13.2/include/freetype/ftchapters.h /freetype-2.13.2/include/freetype/ftcid.h /freetype-2.13.2/include/freetype/ftcolor.h /freetype-2.13.2/include/freetype/ftdriver.h /freetype-2.13.2/include/freetype/fterrdef.h /freetype-2.13.2/include/freetype/fterrors.h /freetype-2.13.2/include/freetype/ftfntfmt.h /freetype-2.13.2/include/freetype/ftgasp.h /freetype-2.13.2/include/freetype/ftglyph.h /freetype-2.13.2/include/freetype/ftgxval.h /freetype-2.13.2/include/freetype/ftgzip.h /freetype-2.13.2/include/freetype/ftimage.h /freetype-2.13.2/include/freetype/ftincrem.h /freetype-2.13.2/include/freetype/ftlcdfil.h /freetype-2.13.2/include/freetype/ftlist.h /freetype-2.13.2/include/freetype
#25 11.20           /usr/bin/install -c -m 644                                    \
#25 11.20             $P /usr/local/include/freetype2/freetype ; \
#25 11.20         done
#25 11.26 for P in /freetype-2.13.2/include/freetype/config/ftconfig.h /freetype-2.13.2/include/freetype/config/ftheader.h /freetype-2.13.2/include/freetype/config/ftmodule.h /freetype-2.13.2/include/freetype/config/ftoption.h /freetype-2.13.2/include/freetype/config/ftstdlib.h /freetype-2.13.2/include/freetype/config/integer-types.h /freetype-2.13.2/include/freetype/config/mac-support.h /freetype-2.13.2/include/freetype/config/public-macros.h  /freetype-2.13.2/objs/ftmodule.h ./builds/unix/ftoption.h ; do                                  \
#25 11.26           /usr/bin/install -c -m 644                                           \
#25 11.26             $P /usr/local/include/freetype2/freetype/config ; \
#25 11.26         done
#25 11.27 /usr/bin/install -c -m 644 /freetype-2.13.2/include/ft2build.h                  \
#25 11.27           /usr/local/include/freetype2/ft2build.h
#25 11.27 /usr/bin/install -c -m 644 ./builds/unix/ftconfig.h                        \
#25 11.27           /usr/local/include/freetype2/freetype/config/ftconfig.h
#25 11.27 /usr/bin/install -c -m 644 /freetype-2.13.2/objs/ftmodule.h                          \
#25 11.27           /usr/local/include/freetype2/freetype/config/ftmodule.h
#25 11.27 /usr/bin/install -c -m 644 ./builds/unix/ftoption.h                        \
#25 11.27           /usr/local/include/freetype2/freetype/config/ftoption.h
#25 11.28 /usr/bin/install -c -m 644 ./builds/unix/freetype2.m4          \
#25 11.28           /usr/local/share/aclocal/freetype2.m4
#25 11.28 /usr/bin/install -c -m 644 ./builds/unix/freetype2.pc             \
#25 11.28           /usr/local/lib/pkgconfig/freetype2.pc
#25 11.28 + echo ===== Freetype build with harfbuzz completed =====
#25 11.28 ===== Freetype build with harfbuzz completed =====
#25 DONE 11.3s
#26 [22/45] RUN set -ex &&     echo "=== freetype-config ===" && freetype-config --libs &&     echo "=== Check symbols in libfreetype.a ===" &&     nm /usr/local/lib/libfreetype.a | grep hb_ || echo "No harfbuzz symbols found"
#26 0.122 + echo === freetype-config ===
#26 0.122 + freetype-config --libs
#26 0.122 === freetype-config ===
#26 0.122 /bin/sh: 1: freetype-config: not found
#26 0.122 + echo No harfbuzz symbols found
#26 0.122 No harfbuzz symbols found
#26 DONE 0.1s
作成済み
# libpthread-stubs
# xtrans
# libXext
# libICE
# libSM
# zlib (静的ビルド強制)
# libpng
# freetype
# fontconfig
# libxkbfile (optional)
# libXfixes
# libXrandr
# libXi
# libXinerama
# xcb-util
# xcb-util-image
# xcb-util-keysyms
# xcb-util-renderutil
# xcb-util-wm
# xcb-util-cursor
# libXrender
# xorgproto (プロトコル定義)
# xcb-proto 
# libXau
# libXdmcp
# libxcb
# libX11
# libxml-2.0
# Build libxkbcommon

不足分
xcb-shape	libxcb-shape
xcb-xkb	libxcb-xkb
xcb-shm	libxcb-shm
xcb-shm	libxcb-shm
xcb-icccm	libxcb-icccm
xkbcommon-x11	libxkbcommon-x11
X11	libX11
glib	libglib-2.0
pthread	libpthread







echo $CR_PAT | docker login ghcr.io -u csreviser --password-stdin

docker pull alpine:3.18
docker tag alpine:3.18 ghcr.io/csreviser/qt6-static-builder:init
docker push ghcr.io/csreviser/qt6-static-builder:init


error while loading shared libraries: libxkbcommon-x11.so.0: cannot open shared object file: No such file or directory

tar -czf mxe-fixed.tar.gz --owner=0 --group=0 -C ./


#!/usr/bin/env bash
set -e

SRC_DIR="$PWD/qt-everywhere-src-6.9.0"
BUILD_DIR="$PWD/qt-build"
INSTALL_DIR="$BUILD_DIR/qt6-static-install"

cd "$SRC_DIR"

./configure -top-level \
  -prefix "$INSTALL_DIR" \
  -static -static-runtime -release \
  -opensource -confirm-license \
  -nomake tests -nomake examples \
  -no-pch \
  -qt-harfbuzz -qt-pcre -qt-zlib \
  -platform linux-g++ \
  -c++std c++20 \
  -skip qt3d -skip qtactiveqt -skip qtcharts -skip qtconnectivity \
  -skip qtdatavis3d -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects \
  -skip qtimageformats -skip qtlocation -skip qtmacextras -skip qtnetworkauth \
  -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols \
  -skip qtquickcontrols2 -skip qtremoteobjects -skip qtscxml \
  -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech \
  -skip qttools -skip qttranslations -skip qtvirtualkeyboard -skip qtwayland \
  -skip qtwebchannel -skip qtwebengine -skip qtwebsockets \
  -skip qtwebview -skip qtwinextras -skip qtlottie -skip qtmultimedia \
  -skip qtpositioning -skip qtquicktimeline \
  # 含めるのは qtbase（デフォルト）+ qtsvg のみ

cmake --build "$BUILD_DIR" --parallel
cmake --install "$BUILD_DIR"
#!/usr/bin/env bash
set -e

# ビルド用ディレクトリ
SRC_DIR="$PWD/qt-everywhere-src-6.9.0"
BUILD_DIR="$PWD/qt-build"
INSTALL_DIR="$BUILD_DIR/qt6-static-install"

# ソース取得済み前提
cd "$SRC_DIR"

# configure 実行
./configure -top-level \
  -prefix "$INSTALL_DIR" \
  -static -static-runtime -release \
  -opensource -confirm-license \
  -nomake examples -nomake tests \
  -no-pch \
  -qt-harfbuzz -qt-pcre -qt-zlib \
  -platform linux-g++ \
  -c++std c++20 \
  -skip qt3d -skip qtactiveqt -skip qtcharts -skip qtconnectivity \
  -skip qtdatavis3d -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects \
  -skip qtimageformats -skip qtlocation -skip qtmacextras -skip qtnetworkauth \
  -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols \
  -skip qtquickcontrols2 -skip qtremoteobjects -skip qtscxml \
  -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech \
  -skip qtsvg -skip qttools -skip qttranslations -skip qtvirtualkeyboard \
  -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets \
  -skip qtwebview -skip qtwinextras -skip qtlottie -skip qtmultimedia \
  -skip qtshadertools -skip qtpositioning -skip qtquicktimeline

# ビルドとインストール
cmake --build "$BUILD_DIR" --parallel
cmake --install "$BUILD_DIR"

-- Found X11_XCB: /usr/lib/x86_64-linux-gnu/libX11-xcb.so (found version "1.8.7")
-- Found XCB_XCB: /usr/lib/x86_64-linux-gnu/libxcb.so (found version "1.15")
-- Found XCB_RENDER: /usr/lib/x86_64-linux-gnu/libxcb-render.so (found version "1.15")
-- Found XCB_SHAPE: /usr/lib/x86_64-linux-gnu/libxcb-shape.so (found version "1.15")
-- Found XCB_XFIXES: /usr/lib/x86_64-linux-gnu/libxcb-xfixes.so (found version "1.15")
-- Found XCB_SHM: /usr/lib/x86_64-linux-gnu/libxcb-shm.so (found version "1.15")
-- Could NOT find XCB_ATOM (missing: XCB_ATOM_LIBRARY XCB_ATOM_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_AUX (missing: XCB_AUX_LIBRARY XCB_AUX_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_COMPOSITE (missing: XCB_COMPOSITE_LIBRARY XCB_COMPOSITE_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_CURSOR (missing: XCB_CURSOR_LIBRARY XCB_CURSOR_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_DAMAGE (missing: XCB_DAMAGE_LIBRARY XCB_DAMAGE_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_DPMS (missing: XCB_DPMS_LIBRARY XCB_DPMS_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_DRI2 (missing: XCB_DRI2_LIBRARY XCB_DRI2_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_DRI3 (missing: XCB_DRI3_LIBRARY XCB_DRI3_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_EVENT (missing: XCB_EVENT_LIBRARY XCB_EVENT_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_EWMH (missing: XCB_EWMH_LIBRARY XCB_EWMH_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_GLX (missing: XCB_GLX_LIBRARY XCB_GLX_INCLUDE_DIR) (found version "")
-- Found XCB_ICCCM: /usr/lib/x86_64-linux-gnu/libxcb-icccm.so (found version "0.4.1")
-- Found XCB_IMAGE: /usr/lib/x86_64-linux-gnu/libxcb-image.so (found version "0.4.0")
-- Found XCB_KEYSYMS: /usr/lib/x86_64-linux-gnu/libxcb-keysyms.so (found version "0.4.0")
-- Could NOT find XCB_PRESENT (missing: XCB_PRESENT_LIBRARY XCB_PRESENT_INCLUDE_DIR) (found version "")
-- Found XCB_RANDR: /usr/lib/x86_64-linux-gnu/libxcb-randr.so (found version "1.15")
-- Could NOT find XCB_RECORD (missing: XCB_RECORD_LIBRARY XCB_RECORD_INCLUDE_DIR) (found version "")
-- Found XCB_RENDERUTIL: /usr/lib/x86_64-linux-gnu/libxcb-render-util.so (found version "0.3.9")
-- Could NOT find XCB_RES (missing: XCB_RES_LIBRARY XCB_RES_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_SCREENSAVER (missing: XCB_SCREENSAVER_LIBRARY XCB_SCREENSAVER_INCLUDE_DIR) (found version "")
-- Found XCB_SYNC: /usr/lib/x86_64-linux-gnu/libxcb-sync.so (found version "1.15")
-- Could NOT find XCB_UTIL (missing: XCB_UTIL_LIBRARY XCB_UTIL_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_XEVIE (missing: XCB_XEVIE_LIBRARY XCB_XEVIE_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_XF86DRI (missing: XCB_XF86DRI_LIBRARY XCB_XF86DRI_INCLUDE_DIR) (found version "")
-- Found XCB_XINERAMA: /usr/lib/x86_64-linux-gnu/libxcb-xinerama.so (found version "1.15")
-- Could NOT find XCB_XINPUT (missing: XCB_XINPUT_LIBRARY XCB_XINPUT_INCLUDE_DIR) (found version "")
-- Found XCB_XKB: /usr/lib/x86_64-linux-gnu/libxcb-xkb.so (found version "1.15")
-- Could NOT find XCB_XPRINT (missing: XCB_XPRINT_LIBRARY XCB_XPRINT_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_XTEST (missing: XCB_XTEST_LIBRARY XCB_XTEST_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_XV (missing: XCB_XV_LIBRARY XCB_XV_INCLUDE_DIR) (found version "")
-- Could NOT find XCB_XVMC (missing: XCB_XVMC_LIBRARY XCB_XVMC_INCLUDE_DIR XCB_XV_FOUND) (found version "")


sudo apt install -y \
  libxcb-xkb-dev \
  libxcb-cursor-dev \
  libxcb-util-dev \
  libxcb-render-util0-dev \
  libxcb-ewmh-dev \
  libxcb-icccm4-dev \
  libxcb-image0-dev \
  libxcb-keysyms1-dev \
  libxcb-randr0-dev \
  libxcb-xinerama0-dev \
  libxcb-shape0-dev \
  libxcb-xfixes0-dev \
  libxcb-sync-dev \
  libxkbcommon-x11-dev


sudo apt install -y \
  libx11-dev \
  libx11-xcb-dev \
  libxext-dev \
  libxrender-dev \
  libxfixes-dev \
  libxrandr-dev \
  libxi-dev \
  libxcomposite-dev \
  libxcursor-dev \
  libxdamage-dev \
  libxtst-dev \
  libxss-dev \
  libxv-dev



sudo apt install -y \
  libgl1-mesa-dev \
  libglu1-mesa-dev \
  libegl1-mesa-dev \
  libgbm-dev

sudo apt install -y \
  libwayland-dev \
  libxkbcommon-dev \
  libxkbcommon-x11-dev

sudo apt install -y \
  libxcb-util0-dev \
  libxcb-dri3-dev \
  libxcb-present-dev \
  libxcb-glx0-dev

libfontconfig1-dev \
    libfreetype-dev \
    libgtk-3-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxcb-cursor-dev \
    libxcb-glx0-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-shape0-dev \
    libxcb-shm0-dev \
    libxcb-sync-dev \
    libxcb-util-dev \
    libxcb-xfixes0-dev \
    libxcb-xkb-dev \
    libxcb1-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxrender-dev


libatspi2.0-dev


./CaptureStream2: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.38' not found (required by ./CaptureStream2)
./CaptureStream2: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.38' not found (required by ./CaptureStream2)

libxcb-render
libSM
libpthread
xcb-present, xcb-glx, xcb-dri3, xcb-cursor, xkbcommon-x11

sudo apt install -y libxcb-render0-dev libsm-dev

qt-everywhere-src-6.5.3
-prefix
/opt/qt6
-static
-static-runtime
-developer-build
-skip
qtwebengine
-nomake
examples
-nomake
tests


Unable to find image 'qt6-static:local' locally
docker: Error response from daemon: pull access denied for qt6-static, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.
See 'docker run --help'.




runs-on: ubuntu-latest
container:
  image: ubuntu:22.04

ldd ./CaptureStream2 | grep -E 'glib|gio|gobject'







FROM ubuntu:22.04

# 環境変数
ARG DEBIAN_FRONTEND=noninteractive
ARG QT_VERSION=6.9.0
ARG QT_VERSION1=6.9
ARG QT_MODULE=qtbase
ENV QT_VERSION=${QT_VERSION}
ENV QT_MODULE=${QT_MODULE}
ENV INSTALL_PREFIX=/opt/qt6-static

# 依存インストール
# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    ninja-build \
    git \
    curl \
    ca-certificates \
    libx11-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxrender-dev \
    libxcb1-dev \
    libx11-xcb-dev \
    libxcb-glx0-dev \
    libxcb-keysyms1-dev \
    libxcb-image0-dev \
    libxcb-shm0-dev \
    libxcb-icccm4-dev \
    libxcb-sync-dev \
    libxcb-xfixes0-dev \
    libxcb-shape0-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-util-dev \
    libxcb-cursor-dev \
    libxcb-xkb-dev \
    libxkbcommon-x11-dev \
    libxcb-util-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-render-util0-dev \
    libxkbcommon-dev \
    libfontconfig1-dev \
    libfreetype6-dev \
    libjpeg-dev \
    libpng-dev \
    zlib1g-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    && rm -rf /var/lib/apt/lists/*

# Qt取得 & ビルド
# Download and extract Qt module source
WORKDIR /build
RUN curl -LO https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/submodules/${QT_MODULE}-everywhere-src-${QT_VERSION}.tar.xz && \
    tar -xf ${QT_MODULE}-everywhere-src-${QT_VERSION}.tar.xz

# Configure, build, and install Qt statically
RUN mkdir qt-build && cd qt-build && \
    cmake -GNinja ../${QT_MODULE}-everywhere-src-${QT_VERSION} \
      -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
      -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_SHARED_LIBS=OFF \
      -DQT_BUILD_EXAMPLES=OFF \
      -DQT_BUILD_TESTS=OFF \
      -DFEATURE_dbus=ON \
      -DFEATURE_icu=OFF \
      -DQT_FEATURE_opengl_desktop=ON \
      -DFEATURE_png=ON \
      -DFEATURE_jpeg=ON \
      -DFEATURE_freetype=ON \
      -DFEATURE_harfbuzz=ON \
      -DQT_FEATURE_gui=ON \
      -DQT_FEATURE_widgets=ON \
      -DQT_FEATURE_xlib=ON \
      -DQT_FEATURE_xcb=ON \
      -DQT_FEATURE_xcb_xlib=ON \
      -DQT_FEATURE_xkbcommon=ON \
      -DQT_FEATURE_fontconfig=ON \
      -DQT_FEATURE_sessionmanager=ON \
      -DQT_FEATURE_glib=OFF \
      -DQT_FEATURE_xrender=ON \
      -DFEATURE_system_zlib=OFF \
      -DFEATURE_system_png=OFF \
      -DFEATURE_system_jpeg=OFF \
      -DFEATURE_system_freetype=OFF \
      -DFEATURE_system_harfbuzz=OFF && \
    cmake --build . --parallel && \
    cmake --install . 

# PATH登録
ENV PATH="/opt/qt6-static/bin:$PATH"





# CMake 最新版をインストール
RUN apt-get update && \
    apt-get install -y wget && \
    wget https://github.com/Kitware/CMake/releases/download/v3.29.2/cmake-3.29.2-linux-x86_64.sh && \
    mkdir /opt/cmake && \
    sh cmake-3.29.2-linux-x86_64.sh --prefix=/opt/cmake --skip-license && \
    ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake

# OpenSSLのソースコードをダウンロード
RUN wget https://www.openssl.org/source/openssl-3.3.0.tar.gz && \
    tar -xf openssl-3.3.0.tar.gz && \
    cd openssl-3.3.0 && \
    # `openssl-cmake`リポジトリをクローン
    git clone https://github.com/jimmy-park/openssl-cmake.git && \
    # `openssl-cmake` の CMakeLists.txt を `openssl-3.3.0` にコピー
    cp -r openssl-cmake/* . && \
    # OpenSSLのビルド
    mkdir build && \
    cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=/usr \
          -DBUILD_SHARED_LIBS=OFF \
          -DOPENSSL_USE_STATIC_LIBS=ON \
          -DOPENSSL_BUILD_STATIC=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DOPENSSL_ROOT_DIR=../ \
          .. && \
    cmake --build . --parallel && \
    cmake --install .

